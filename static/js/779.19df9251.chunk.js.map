{"version":3,"file":"static/js/779.19df9251.chunk.js","mappings":"0RAEaA,EAAcC,EAAAA,GAAAA,GAAH,kFAKXC,EAASD,EAAAA,GAAAA,GAAH,yCAINE,EAASF,EAAAA,GAAAA,EAAH,yIAQNG,EAAUH,EAAAA,GAAAA,EAAH,kEAKPI,EAAYJ,EAAAA,GAAAA,EAAH,wF,SCqBtB,MAjCA,WACE,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAaR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAEMC,EAAAA,EAAAA,IAAWJ,GAFjB,gBAETK,EAFS,EAETA,KACRN,EAAWM,EAAKC,SAHC,gDAKjBC,QAAQC,MAAM,KAAMC,SALH,yDAAH,qDAQlBN,GACD,GAAE,CAACH,KAGF,8BACsB,IAAnBF,EAAQY,QACP,SAACnB,EAAD,UACGO,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,OAAQb,EAApB,EAAoBA,GAApB,OACX,UAACP,EAAD,YACE,UAACC,EAAD,sBAAiBmB,MACjB,SAAClB,EAAD,UAAUiB,MAFCZ,EADF,OAQf,SAACJ,EAAD,yDAIP,C,6MCxCKkB,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IAAA,sCAAyCF,IAF7D,cAEGG,EAFH,yBAGIA,GAHJ,iCAKHC,EAAAA,EAAAA,GAAO,KAAMT,SACbF,QAAQC,MAAR,MANG,gFAUA,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAAwBC,GAAxB,gGAEoBJ,EAAAA,EAAAA,IAAA,gCACIF,EADJ,kBACqBM,IAHzC,cAEGH,EAFH,yBAKIA,GALJ,iCAOHC,EAAAA,EAAAA,GAAO,KAAMT,SACbF,QAAQC,MAAR,MARG,gFAYA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gGAEoBN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,oBAAwCR,IAF5D,cAEGG,EAFH,yBAGIA,GAHJ,iCAKHC,EAAAA,EAAAA,GAAO,KAAMT,SACbF,QAAQC,MAAR,MANG,gFAUA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAAuBD,GAAvB,gGAEoBN,EAAAA,EAAAA,IAAA,iBACXM,EADW,4BACiBR,IAHrC,cAEGG,EAFH,yBAKIA,GALJ,iCAOHC,EAAAA,EAAAA,GAAO,KAAMT,SACbF,QAAQC,MAAR,MARG,gFAYA,SAAeJ,EAAtB,+CAAO,OAAP,oBAAO,WAA0BkB,GAA1B,gGAEoBN,EAAAA,EAAAA,IAAA,iBACXM,EADW,4BACiBR,IAHrC,cAEGG,EAFH,yBAKIA,GALJ,iCAOHC,EAAAA,EAAAA,GAAO,KAAMT,SACbF,QAAQC,MAAR,MARG,gFA9CPQ,EAAAA,EAAAA,SAAAA,QAAyB,8B,qECFZE,G,QAAS,SAAAT,GAAO,OAC3Be,EAAAA,GAAAA,KAAWf,EAAS,CAClBgB,SAAUD,EAAAA,GAAAA,SAAAA,WACVE,KAAMF,EAAAA,GAAAA,KAAAA,MAHmB,E","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api.js","services/notify.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  padding: 0 15px;\n  border-top: 1px solid transparent;\n`;\n\nexport const Review = styled.li`\n  padding: 5px;\n`;\n\nexport const Author = styled.p`\n  padding-left: 25px;\n  font-size: 20px;\n  font-weight: 500;\n  text-decoration: underline;\n  margin-top: 0;\n`;\n\nexport const Content = styled.p`\n  text-indent: 20px;\n  font-size: 16px;\n`;\n\nexport const NoContent = styled.p`\n  text-align: center;\n  font-size: 22px;\n  font-weight: 600;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from '../../services/api';\n\nimport {\n  ReviewsList,\n  Review,\n  Author,\n  Content,\n  NoContent,\n} from './Reviews.styled';\n\nfunction Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const { data } = await getReviews(id);\n        setReviews(data.results);\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n    fetchReviews();\n  }, [id]);\n\n  return (\n    <>\n      {reviews.length !== 0 ? (\n        <ReviewsList>\n          {reviews.map(({ content, author, id }) => (\n            <Review key={id}>\n              <Author>Author: {author}</Author>\n              <Content>{content}</Content>\n            </Review>\n          ))}\n        </ReviewsList>\n      ) : (\n        <NoContent>We don't have any reviews for this movie.</NoContent>\n      )}\n    </>\n  );\n}\n\nexport default Reviews;\n","import axios from 'axios';\nimport { notify } from './notify';\n\nconst API_KEY = 'd06f3f881af415394d900f66e6d54b92';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function getTrending() {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    notify(error.message);\n    console.error(error);\n  }\n}\n\nexport async function getMovie(query) {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response;\n  } catch (error) {\n    notify(error.message);\n    console.error(error);\n  }\n}\n\nexport async function getMovieDetails(movie_id) {\n  try {\n    const response = await axios.get(`/movie/${movie_id}?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    notify(error.message);\n    console.error(error);\n  }\n}\n\nexport async function getCast(movie_id) {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}/credits?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    notify(error.message);\n    console.error(error);\n  }\n}\n\nexport async function getReviews(movie_id) {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}/reviews?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    notify(error.message);\n    console.error(error);\n  }\n}\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nexport const notify = message =>\n  toast.dark(message, {\n    position: toast.POSITION.TOP_CENTER,\n    type: toast.TYPE.INFO,\n  });\n"],"names":["ReviewsList","styled","Review","Author","Content","NoContent","useState","reviews","setReviews","id","useParams","useEffect","fetchReviews","getReviews","data","results","console","error","message","length","map","content","author","API_KEY","getTrending","axios","response","notify","getMovie","query","getMovieDetails","movie_id","getCast","toast","position","type"],"sourceRoot":""}